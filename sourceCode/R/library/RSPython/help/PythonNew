.PythonNew             package:RSPython             R Documentation

_C_r_e_a_t_e _a_n _i_n_s_t_a_n_c_e _o_f _a _P_y_t_h_o_n _c_l_a_s_s

_D_e_s_c_r_i_p_t_i_o_n:

     This function creates an instance of a Python class. Generally,
     this returns a reference to that object so that it can be used in
     subsequent Python calls  from R.

_U_s_a_g_e:

     .PythonNew(className, ..., .module=NULL, .convert=F)

_A_r_g_u_m_e_n_t_s:

className: the name of the class of which an  new instance is to be
          created

     ...: any arguments to the `__init__' method of the class,
          including named arguments

 .module: the ``name'' of the module in which the class is defined.
          This is usually a single string, but for nested modules is a
          character vector whose elements are in the top-level to
          sub-module order; e.g. if a class C is defined in the module
          B which is in A (i.e. A.B.C in Python terms), the `.module'
          is given as `c("A","B")'

.convert: a logical value indicating whether to attempt to convert the
          newly created object or not. This is usually only `FALSE'
          when creating the object has a useful side-effect.

_V_a_l_u_e:

     If `.convert' is `FALSE', a reference to the  newly created object
     is returned. This is an object of class `'. Otherwise, an attempt
     to convert the newly created object using the built-in and the
     current user-specified converters is performed. The result depends
     on what these return. If no converter is found, a reference to the
     newly created object is  returned, just as if `.convert' was
     specified as `FALSE'.

_A_u_t_h_o_r(_s):

     Duncan Temple Lang

_R_e_f_e_r_e_n_c_e_s:

     <URL: http://www.omegahat.org/RSPython>, <URL:
     http://www.python.org>

_S_e_e _A_l_s_o:

     `.PythonMethod' `.Python'

_E_x_a_m_p_l_e_s:

     u <- .PythonNew("urlopen", "http://www.omegahat.org/index.html", .module="urllib")
     .PythonMethod(u, "geturl")  
     txt <- u$read()
     u$geturl()
     u$close()

